    lw $1, $0, 0                # loop counter
    addi $2, $0, 7              # loop limit
    addi $3, $0, 1              # fibonacci no. 1
    addi $4, $0, 1              # fibonacci no. 2
LOOP:
    addi $1, $1, 1              # counter++
    add $0, $0, $0              # NOPs to remove hazard on counter increment and branch
    add $0, $0, $0
    beq $2, $1, DONE            # if counter == loop limit then done!
    add $0, $0, $0              # NOP (delay slot)
    add $3, $3, $4              # fib no. 1 = fib no. 1 + fib no. 2
    add $4, $3, $4              # fib no. 2 = fib no. 1 + fib no. 2
    beq $0, $0, LOOP            # Jump back and repeat
    add $0, $0, $0              # NOP (delay slot)
DONE:
    sw $0, $3, 0                # Mem[0] = fib no. 1
    sw $0, $4, 1                # Mem[1] = fib no. 2
    add $0, $0, $0              # NOPs ...
    add $0, $0, $0
    add $0, $0, $0
    add $0, $0, $0
    add $0, $0, $0
    add $0, $0, $0
